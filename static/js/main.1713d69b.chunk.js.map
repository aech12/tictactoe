{"version":3,"sources":["components/Square.js","components/Board.js","containers/Game.js","components/PregameOptions.js","helper/usefulFunctions.js","helper/minimax.js","App.js","helper/computerMakesMove.js","serviceWorker.js","index.js"],"names":["Square","_ref","onClick","value","react_default","a","createElement","className","Board","squares","board","map","i","components_Square","key","Game","status","noPointerEvents","history","step","handleClick","restartGame","startGame","jumpTo","goToMove","index","msg","concat","Button","variant","color","components_Board","style","marginTop","PregameOptions","gameIsVsPC","playerOneName","playerTwoName","changePlayerName","vsPC","vsPcMode","vsHumanMode","onSubmit","Input","onChange","e","placeholder","type","calculateWinner","winnerLines","length","_winnerLines$i","Object","slicedToArray","b","c","checkIfGameIsOver","currentSquares","minimax","currentPlayer","depth","arguments","undefined","gameIsOver","depthIsPair","Number","every","square","Math","floor","random","isGameOver","nextPlayer","moves","newSquares","toConsumableArray","score","push","objectSpread","bestMoves","squaresWithLowestScores","getRandomMove","squaresWithHighestScores","movesWithHigestScore","bestMove","Infinity","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","move","err","return","movesWithLowestScore","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","theme","createMuiTheme","palette","primary","main","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","slice","setState","playerName","defineProperty","target","preventDefault","gameStarts","Array","fill","vsBoolean","setNewStateWithComputerMove","setTimeout","currentPlayerName","computerMadeMove","computerMakesMove","ThemeProvider","pointerEvents","containers_Game","components_PregameOptions","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1713d69b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './All.css'\r\n\r\nconst Square = ({onClick, value}) => {\r\n  return (\r\n    <div className='square' onClick={onClick}>\r\n      {value}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Square\r\n\r\n","import React from 'react';\r\nimport './All.css';\r\nimport Square from './Square';\r\n\r\nconst Board = ({ squares, onClick }) => {\r\n  const board = squares.map((value, i) => (\r\n    <Square value={value} key={i} onClick={() => onClick(i)} />\r\n  ));\r\n  return <div>{board}</div>;\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport Board from \"../components/Board\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"../App.css\";\r\n\r\nconst Game = ({\r\n  status,\r\n  noPointerEvents,\r\n  history,\r\n  squares,\r\n  step,\r\n  handleClick,\r\n  restartGame,\r\n  startGame,\r\n  jumpTo\r\n}) => {\r\n  const goToMove = history.map((squares, index) => {\r\n    let msg = `Turn #${index}`;\r\n    return (\r\n      <li key={index}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => jumpTo(index)}\r\n        >\r\n          {`${msg}`}\r\n        </Button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"BoardScreen\">\r\n      <div className=\"leftside\">\r\n        <div className=\"status\">{status}</div>\r\n        <div className={`board ${noPointerEvents}`}>\r\n          <Board squares={history[step].squares} onClick={handleClick} />\r\n        </div>\r\n        <div style={{ marginTop: \"10px\" }}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={restartGame}>\r\n            Play Again\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={startGame}>\r\n            Change Settings\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <ul className=\"rightside\">{goToMove}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useState } from \"react\";\r\nimport \"./All.css\";\r\nimport { Input, Button } from \"@material-ui/core\";\r\n\r\nconst PregameOptions = ({\r\n  startGame,\r\n  gameIsVsPC,\r\n  playerOneName,\r\n  playerTwoName,\r\n  changePlayerName,\r\n  vsPC\r\n}) => {\r\n  // prettier-ignore\r\n  // const [vsMode, setvsMode] = useState(true);\r\n  // const checkedButton = e => {\r\n  //   const [checked, setChecked] = useState(false);\r\n  //   // const onClick =\r\n  // };\r\n  // const vsPC =\r\n\r\n  //   const usePlayer = player => {\r\n  //     const [name, setName] = useState('');\r\n  //     const onChange = e => {\r\n  //       setName(e.target.value);\r\n  //     };\r\n  //     return {\r\n  //       name,\r\n  //       onChange\r\n  //     };\r\n  //   };\r\n  //   const p1 = usePlayer();\r\n\r\n  // bt1 = false;\r\n  // bt2 = true;\r\n\r\n  const vsPcMode = vsPC ? \"contained\" : \"outlined\";\r\n  const vsHumanMode = !vsPC ? \"contained\" : \"outlined\";\r\n\r\n  return (\r\n    <form onSubmit={startGame}>\r\n      <div>\r\n        <p>Mode: </p>\r\n        <Button\r\n          variant={`${vsPcMode}`}\r\n          color=\"primary\"\r\n          onClick={() => gameIsVsPC(true)}\r\n        >\r\n          Human vs PC\r\n        </Button>\r\n\r\n        <Button\r\n          variant={`${vsHumanMode}`}\r\n          color=\"primary\"\r\n          onClick={() => gameIsVsPC(false)}\r\n        >\r\n          Human vs Human\r\n        </Button>\r\n      </div>\r\n\r\n      <div>\r\n        <p>P1 Name:</p>\r\n        <Input\r\n          value={playerOneName}\r\n          onChange={e => changePlayerName(e, \"playerOneName\")}\r\n          placeholder=\"Basic usage\"\r\n        />\r\n        <p>P2 Name:</p>\r\n        <Input\r\n          value={playerTwoName}\r\n          onChange={e => changePlayerName(e, \"playerTwoName\")}\r\n          placeholder=\"Basic usage\"\r\n        />\r\n      </div>\r\n\r\n      <Button\r\n        style={{ marginTop: \"15px\" }}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        type=\"submit\"\r\n      >\r\n        Start\r\n      </Button>\r\n\r\n      {/*\r\n       <p>\r\n         Play:\r\n         <Button>\r\n           <input type='radio' id='Xradio' name='XorO'></input>First\r\n         </Button>\r\n         <Button>\r\n           <input type='radio' id='Oradio' name='XorO'></input>Second\r\n         </Button>\r\n       </p>\r\n      */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PregameOptions;\r\n","function calculateWinner(squares) {\r\n  const winnerLines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < winnerLines.length; i++) {\r\n    const [a, b, c] = winnerLines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nconst checkIfGameIsOver = (currentSquares, i) => {\r\n  if (calculateWinner(currentSquares) || currentSquares[i]) {\r\n    return true;\r\n  }\r\n};\r\n\r\nexport { calculateWinner, checkIfGameIsOver };\r\n","import { calculateWinner } from './usefulFunctions';\r\n\r\nfunction isGameOver(squares, depth) {\r\n  let winner = calculateWinner(squares);\r\n  let depthIsPair = depth % 2 === 0;\r\n\r\n  if (winner) {\r\n    if (!depthIsPair) {\r\n      return { value: -10 + Number(depth) };\r\n    } else if (depthIsPair) {\r\n      return { value: 10 - Number(depth) };\r\n    }\r\n  } else if (squares.every(square => square)) {\r\n    return { value: 0 };\r\n  } else if (depth === 0 && squares.every(square => square === undefined)) {\r\n    return { value: 0, index: Math.floor(Math.random() * 9) };\r\n  }\r\n}\r\n\r\nfunction minimax(squares, currentPlayer, depth = 0) {\r\n  let gameIsOver = isGameOver(squares, depth);\r\n  if (gameIsOver) {\r\n    return gameIsOver;\r\n  }\r\n\r\n  const nextPlayer = currentPlayer === 'X' ? 'O' : 'X';\r\n  const moves = [];\r\n\r\n  for (let i = 0; i < squares.length; i++) {\r\n    if (!squares[i]) {\r\n      let newSquares = [...squares];\r\n      newSquares[i] = currentPlayer;\r\n\r\n      let value = minimax(newSquares, nextPlayer, depth + 1).value;\r\n\r\n      let score = { value, index: i };\r\n      moves.push({ ...score });\r\n    }\r\n    // else if (i === 8 && squares.every(square=> square)) {\r\n    //   return {value: 0, index: i}\r\n    // }\r\n\r\n    if (i === 8) {\r\n      if (depth % 2 === 0) {\r\n        let bestMoves = squaresWithLowestScores(moves);\r\n        let move = getRandomMove(bestMoves);\r\n        return move;\r\n      } else if (!depth % 2 === 0) {\r\n        let bestMoves = squaresWithHighestScores(moves);\r\n        let move = getRandomMove(bestMoves);\r\n        return move;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst squaresWithHighestScores = moves => {\r\n  let movesWithHigestScore = [];\r\n  let bestMove = { value: -Infinity, index: 0 };\r\n\r\n  for (let move of moves) {\r\n    if (move.value > bestMove.value) {\r\n      bestMove = move;\r\n      movesWithHigestScore = [{ ...bestMove }];\r\n    } else if (move.value === bestMove.value) {\r\n      movesWithHigestScore.push(move);\r\n    }\r\n  }\r\n  return movesWithHigestScore;\r\n};\r\nconst squaresWithLowestScores = moves => {\r\n  let movesWithLowestScore = [];\r\n  let bestMove = { value: Infinity, index: 0 };\r\n\r\n  for (let move of moves) {\r\n    if (move.value < bestMove.value) {\r\n      bestMove = move;\r\n      movesWithLowestScore = [{ ...bestMove }];\r\n    } else if (bestMove.value === move.value) {\r\n      movesWithLowestScore.push(move);\r\n    }\r\n  }\r\n  return movesWithLowestScore;\r\n};\r\nconst getRandomMove = moves => {\r\n  const randomMove = moves[Math.floor(Math.random() * moves.length)];\r\n  return randomMove;\r\n};\r\n\r\nexport {\r\n  isGameOver,\r\n  squaresWithHighestScores,\r\n  squaresWithLowestScores,\r\n  getRandomMove,\r\n  minimax\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./components/All.css\";\r\nimport \"./App.css\";\r\nimport Game from \"./containers/Game\";\r\nimport PregameOptions from \"./components/PregameOptions\";\r\nimport { calculateWinner, checkIfGameIsOver } from \"./helper/usefulFunctions\";\r\n// import { minimax } from \"./helper/minimax\";\r\nimport \"typeface-roboto\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { computerMakesMove } from \"./helper/computerMakesMove\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: \"#353643\" }\r\n  }\r\n});\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{ squares: Array(9).fill(null) }],\r\n      currentPlayer: \"O\",\r\n      step: 0,\r\n      playerOneName: \"P1\",\r\n      playerTwoName: \"P2\",\r\n      vsPC: true,\r\n      noPointerEvents: \"\",\r\n      gameStarts: !false\r\n    };\r\n  }\r\n\r\n  handleClick = i => {\r\n    const step = this.state.step;\r\n    const history = this.state.history.slice(0, step + 1);\r\n    const currentSquares = history[history.length - 1].squares.slice();\r\n    const currentPlayer = this.state.currentPlayer;\r\n    const nextPlayer = currentPlayer === \"O\" ? \"X\" : \"O\";\r\n\r\n    if (checkIfGameIsOver(currentSquares, i)) {\r\n      return;\r\n    }\r\n\r\n    currentSquares[i] = currentPlayer === \"O\" ? \"O\" : \"X\";\r\n\r\n    this.setState({\r\n      history: history.concat([{ squares: currentSquares }]),\r\n      currentPlayer: nextPlayer,\r\n      step: step + 1\r\n    });\r\n    if (this.state.vsPC) {\r\n      this.setState({ noPointerEvents: \"none\" });\r\n    }\r\n  };\r\n\r\n  jumpTo = i => {\r\n    this.setState({\r\n      step: i,\r\n      currentPlayer: i % 2 === 0 ? \"O\" : \"X\"\r\n    });\r\n  };\r\n\r\n  changePlayerName = (e, playerName) => {\r\n    this.setState({\r\n      [playerName]: e.target.value\r\n    });\r\n  };\r\n\r\n  startGame = e => {\r\n    e.preventDefault();\r\n    this.setState({ gameStarts: !this.state.gameStarts });\r\n  };\r\n\r\n  restartGame = () =>\r\n    this.setState({ step: 0, history: [{ squares: Array(9).fill(null) }] });\r\n\r\n  gameIsVsPC = vsBoolean => {\r\n    this.setState({ vsPC: vsBoolean });\r\n  };\r\n\r\n  setNewStateWithComputerMove = (history, step) => {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        history,\r\n        currentPlayer: this.state.currentPlayer === \"O\" ? \"X\" : \"O\",\r\n        step,\r\n        noPointerEvents: \"\"\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    const step = this.state.step;\r\n    const history = this.state.history.slice(0, step + 1);\r\n    const currentSquares = history[history.length - 1].squares.slice();\r\n    let currentPlayer = this.state.currentPlayer;\r\n    let currentPlayerName =\r\n      currentPlayer === \"O\"\r\n        ? this.state.playerOneName\r\n        : this.state.playerTwoName;\r\n    let nextPlayer =\r\n      currentPlayer === \"X\"\r\n        ? this.state.playerOneName\r\n        : this.state.playerTwoName;\r\n    let status;\r\n    const winner = calculateWinner(currentSquares);\r\n\r\n    if (winner) {\r\n      status = `Winner is ${nextPlayer}!`;\r\n    } else if (currentSquares.every(squares => squares)) {\r\n      status = \"Draw!\";\r\n    } else {\r\n      status = `It's ${currentPlayerName}'s turn`;\r\n    }\r\n\r\n    if (currentPlayer === \"X\") {\r\n      const computerMadeMove = computerMakesMove(\r\n        step,\r\n        history,\r\n        currentSquares,\r\n        currentPlayer\r\n      );\r\n      this.setNewStateWithComputerMove(\r\n        computerMadeMove.history,\r\n        computerMadeMove.step\r\n      );\r\n    }\r\n\r\n    // #353643 rgba(255, 255, 255, 0.70)\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <div\r\n            className=\"Game\"\r\n            style={{ pointerEvents: `${this.state.noPointerEvents}` }}\r\n          >\r\n            {this.state.gameStarts === true ? (\r\n              <Game\r\n                status={status}\r\n                noPointerEvents={this.state.noPointerEvents}\r\n                history={history}\r\n                step={this.state.step}\r\n                handleClick={this.handleClick}\r\n                restartGame={this.restartGame}\r\n                startGame={this.startGame}\r\n                jumpTo={this.jumpTo}\r\n              />\r\n            ) : (\r\n              <PregameOptions\r\n                className=\"PregameOptions\"\r\n                playerOneName={this.state.playerOneName}\r\n                playerTwoName={this.state.playerTwoName}\r\n                changePlayerName={this.changePlayerName}\r\n                startGame={this.startGame}\r\n                gameIsVsPC={this.gameIsVsPC}\r\n                vsPC={this.state.vsPC}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// import { calculateWinner, checkIfGameIsOver } from \"./helper/usefulFunctions\";\r\nimport { minimax } from \"./minimax\";\r\n\r\nfunction computerMakesMove(step, history, currentSquares, currentPlayer) {\r\n  let moveIndex = minimax(currentSquares, currentPlayer).index;\r\n  // if (checkIfGameIsOver(currentSquares, moveIndex)) {\r\n  //   return;\r\n  // }\r\n  currentSquares[moveIndex] = currentPlayer === \"O\" ? \"O\" : \"X\";\r\n\r\n  return {\r\n    history: history.concat([{ squares: currentSquares }]),\r\n    step: step + 1\r\n  };\r\n}\r\n\r\nexport { computerMakesMove };\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}